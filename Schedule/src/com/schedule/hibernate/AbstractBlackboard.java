/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Jun 23 21:59:24 CEST 2005 by MyEclipse Hibernate Tool.
 */
package com.schedule.hibernate;

import java.io.Serializable;

/**
 * A class that represents a row in the Blackboard table. 
 * You can customize the behavior of this class by editing the class, {@link Blackboard()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractBlackboard 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Integer idBlackboard;

    /** The value of the simple subject property. */
    private java.lang.String subject;

    /** The value of the simple body property. */
    private java.lang.String body;

    /** The value of the simple date property. */
    private java.util.Date date;

    /** Das Projekt zu dem dieser Blackboard-Eintrag gehört */
    private Projects project;
    
    /**
     * Simple constructor of AbstractBlackboard instances.
     */
    public AbstractBlackboard()
    {
    }

    /**
     * Constructor of AbstractBlackboard instances given a simple primary key.
     * @param pid
     */
    public AbstractBlackboard(java.lang.Integer idBlackboard)
    {
        this.setIdBlackboard(idBlackboard);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Integer
     */
    public java.lang.Integer getIdBlackboard()
    {
        return idBlackboard;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param pid
     */
    public void setIdBlackboard(java.lang.Integer idBlackboard)
    {
        this.hashValue = 0;
        this.idBlackboard = idBlackboard;
    }

    /**
     * Return the value of the Subject column.
     * @return java.lang.String
     */
    public java.lang.String getSubject()
    {
        return this.subject;
    }

    /**
     * Set the value of the Subject column.
     * @param subject
     */
    public void setSubject(java.lang.String subject)
    {
        this.subject = subject;
    }

    /**
     * Return the value of the Body column.
     * @return java.lang.String
     */
    public java.lang.String getBody()
    {
        return this.body;
    }

    /**
     * Set the value of the Body column.
     * @param body
     */
    public void setBody(java.lang.String body)
    {
        this.body = body;
    }

    /**
     * Return the value of the Date column.
     * @return java.util.Date
     */
    public java.util.Date getDate()
    {
        return this.date;
    }

    /**
     * Set the value of the Date column.
     * @param date
     */
    public void setDate(java.util.Date date)
    {
        this.date = date;
    }
    
    /**
     * liefert das Projekt zurück, zu dem dieser Blackboard-Eintrag gehört
     * @return Projects project
     */
    public Projects getProject()
    {
    	return project;
    }
    
    /**
     * setzt das Projekt, zu dem dieser Blackboard-Eintrag gehört
     * @param project
     */
    public void setProject(Projects project)
    {
    	this.project = project;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Blackboard))
            return false;
        Blackboard that = (Blackboard) rhs;
        if (this.getIdBlackboard() != null && that.getIdBlackboard() != null)
        {
            if (! this.getIdBlackboard().equals(that.getIdBlackboard()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int pidValue = this.getIdBlackboard() == null ? 0 : this.getIdBlackboard().hashCode();
            result = result * 37 + pidValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
