/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Jun 23 22:01:01 CEST 2005 by MyEclipse Hibernate Tool.
 */
package com.schedule.hibernate;

import java.io.Serializable;


/**
 * A class that represents a row in the User table. 
 * You can customize the behavior of this class by editing the class, {@link User()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractUser 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Integer idUser;

    /** The value of the simple lastname property. */
    private java.lang.String lastname;

    /** The value of the simple firstname property. */
    private java.lang.String firstname;

    /** The value of the simple title property. */
    private java.lang.String title;

    /** The value of the simple email property. */
    private java.lang.String email;

    /** The value of the simple phone property. */
    private java.lang.String phone;

    /** The value of the simple street property. */
    private java.lang.String street;

    /** The value of the simple city property. */
    private java.lang.String city;

    /** The value of the simple zip property. */
    private java.lang.Integer zip;

    /** Aktuelle Rolle (User bzw. Admin) des Users */
    private Roles role;
    
    /** Aktuelle Logins des Users */
    private Login login;
    
    /** Aktuelle Projekte des Nutzers */
    private java.util.Set projects;
    
    /** Alle Gruppen denen dieser User angehört */
    private java.util.Set groups;
    
    /** Alle Nachrichten dieses Users */
    private java.util.Set messages;
    
    /** Alle Termine dieses Users */
    private java.util.Set appointments;
    
    /** Alle Aufgaben dieses Users */
    private java.util.Set tasks;
    
    /** Alle Preferences dieses Users */
    private java.util.Set preferences;
    
    /**
     * Simple constructor of AbstractUser instances.
     */
    public AbstractUser()
    {
    	projects = new java.util.HashSet();
    	groups = new java.util.HashSet();
    	messages = new java.util.HashSet();
    	appointments = new java.util.HashSet();
    	tasks = new java.util.HashSet();
    	preferences = new java.util.HashSet();
    }

    /**
     * Constructor of AbstractUser instances given a simple primary key.
     * @param uid
     */
    public AbstractUser(java.lang.Integer idUser)
    {
        this.setIdUser(idUser);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Integer
     */
    public java.lang.Integer getIdUser()
    {
        return idUser;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param idUser
     */
    public void setIdUser(java.lang.Integer idUser)
    {
        this.hashValue = 0;
        this.idUser = idUser;
    }

    /**
     * Return the value of the Lastname column.
     * @return java.lang.String
     */
    public java.lang.String getLastname()
    {
        return this.lastname;
    }

    /**
     * Set the value of the Lastname column.
     * @param lastname
     */
    public void setLastname(java.lang.String lastname)
    {
        this.lastname = lastname;
    }

    /**
     * Return the value of the Firstname column.
     * @return java.lang.String
     */
    public java.lang.String getFirstname()
    {
        return this.firstname;
    }

    /**
     * Set the value of the Firstname column.
     * @param firstname
     */
    public void setFirstname(java.lang.String firstname)
    {
        this.firstname = firstname;
    }

    /**
     * Return the value of the Title column.
     * @return java.lang.String
     */
    public java.lang.String getTitle()
    {
        return this.title;
    }

    /**
     * Set the value of the Title column.
     * @param title
     */
    public void setTitle(java.lang.String title)
    {
        this.title = title;
    }

    /**
     * Return the value of the Email column.
     * @return java.lang.String
     */
    public java.lang.String getEmail()
    {
        return this.email;
    }

    /**
     * Set the value of the Email column.
     * @param email
     */
    public void setEmail(java.lang.String email)
    {
        this.email = email;
    }

    /**
     * Return the value of the Phone column.
     * @return java.lang.String
     */
    public java.lang.String getPhone()
    {
        return this.phone;
    }

    /**
     * Set the value of the Phone column.
     * @param phone
     */
    public void setPhone(java.lang.String phone)
    {
        this.phone = phone;
    }

    /**
     * Return the value of the Street column.
     * @return java.lang.String
     */
    public java.lang.String getStreet()
    {
        return this.street;
    }

    /**
     * Set the value of the Street column.
     * @param street
     */
    public void setStreet(java.lang.String street)
    {
        this.street = street;
    }

    /**
     * Return the value of the City column.
     * @return java.lang.String
     */
    public java.lang.String getCity()
    {
        return this.city;
    }

    /**
     * Set the value of the City column.
     * @param city
     */
    public void setCity(java.lang.String city)
    {
        this.city = city;
    }

    /**
     * Return the value of the ZIP column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getZip()
    {
        return this.zip;
    }

    /**
     * Set the value of the ZIP column.
     * @param zip
     */
    public void setZip(java.lang.Integer zip)
    {
        this.zip = zip;
    }

    /**
     * Liefert die aktuelle Rolle (User bzw. Admin) des Nutzers zurück
     * @return java.util.Set roles 
     */
    public Roles getRole()
    {
    	return role;
    }

    /**
     * Setzt die aktuelle Rolle (User. bzw. Admin) des Nutzers
     * @param roles
     */
    public void setRole(Roles role)
    {
    	this.role = role;
    }
    
    /**
     * Liefert die aktuellen Projekte des Nutzers zurück
     * @return java.util.Set logins 
     */
    public Login getLogin()
    {
    	return login;
    }

    /**
     * Setzt die Projekte des Nutzers
     * @param logins
     */
    public void setLogin(Login login)
    {
    	this.login = login;
    }
    
    /**
     * Liefert die aktuellen Projekte des Nutzers zurück
     * @return java.util.Set projects 
     */
    public java.util.Set getProjects()
    {
    	return projects;
    }

    /**
     * Setzt die Projekte des Nutzers
     * @param projects
     */
    public void setProjects(java.util.Set projects)
    {
    	this.projects = projects;
    }
    
    /**
     * liefert alle Gruppen zurück denen dieser User angehört
     * @return java.util.Set messages
     */
    public java.util.Set getMessages()
    {
    	return messages;
    }
    
    /**
     * setzt die Gruppen denen der User angehört
     * @param messages
     */
    public void setMessages(java.util.Set messages)
    {
    	this.messages = messages;
    }
    
    /**
     * liefert alle Gruppen zurück denen dieser User angehört
     * @return java.util.Set appointments
     */
    public java.util.Set getAppointments()
    {
    	return appointments;
    }
    
    /**
     * setzt die Gruppen denen der User angehört
     * @param appointments
     */
    public void setAppointments(java.util.Set appointments)
    {
    	this.appointments = appointments;
    }

    /**
     * liefert alle Aufgaben zurück, die von diesem User zu erledigen sind
     * @return java.util.Set tasks
     */
    public java.util.Set getTasks()
    {
    	return tasks;
    }
    
    /**
     * setzt Aufgaben, die von diesem User zu erledigen sind
     * @param tasks
     */
    public void setTasks(java.util.Set tasks)
    {
    	this.tasks = tasks;
    }
    
    /**
     * setzt die Preferences die zu diesem User gehören
     * @param preferences
     */
    public void setPreferences(java.util.Set preferences)
    {
    	this.preferences = preferences;
    }
    
    /**
     * liefert alle Preferences dieses User zurück
     * @return java.util.Set preferences
     */
    public java.util.Set getPreferences()
    {
    	return preferences;
    }
    
    /**
     * liefert alle Gruppen zurück denen dieser User angehört
     * @return java.util.Set groups
     */
    public java.util.Set getGroups()
    {
    	return groups;
    }
   
    /**
     * setzt die Gruppen denen der User angehört
     * @param groups
     */
    public void setGroups(java.util.Set groups)
    {
    	this.groups = groups;
    }
    
    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof User))
            return false;
        User that = (User) rhs;
        if (this.getIdUser() != null && that.getIdUser() != null)
        {
            if (! this.getIdUser().equals(that.getIdUser()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int uidValue = this.getIdUser() == null ? 0 : this.getIdUser().hashCode();
            result = result * 37 + uidValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
