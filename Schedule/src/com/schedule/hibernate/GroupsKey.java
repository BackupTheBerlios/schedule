/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Jun 23 21:59:38 CEST 2005 by MyEclipse Hibernate Tool.
 */
package com.schedule.hibernate;

import java.io.Serializable;

/**
 * A class representing a composite primary key id for the Groups
 * table.  This object should only be instantiated for use with instances 
 * of the Groups class.
 */
public class GroupsKey
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private volatile int hashValue = 0;

    /** The value of the GID component of this composite id. */
    private java.lang.Integer gid;

    /** The value of the PID component of this composite id. */
    private java.lang.Integer pid;

    /**
     * Simple constructor of GroupsKey instances.
     */
    public GroupsKey()
    {
    }

    /**
     * Returns the value of the gid property.
     * @return java.lang.Integer
     */
    public java.lang.Integer getGid()
    {
        return gid;
    }

    /**
     * Sets the value of the gid property.
     * @param gid
     */
    public void setGid(java.lang.Integer gid)
    {
        hashValue = 0;
        this.gid = gid;
    }

    /**
     * Returns the value of the pid property.
     * @return java.lang.Integer
     */
    public java.lang.Integer getPid()
    {
        return pid;
    }

    /**
     * Sets the value of the pid property.
     * @param pid
     */
    public void setPid(java.lang.Integer pid)
    {
        hashValue = 0;
        this.pid = pid;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the id components.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof GroupsKey))
            return false;
        GroupsKey that = (GroupsKey) rhs;
        if (this.getGid() != null && that.getGid() != null)
        {
            if (! this.getGid().equals(that.getGid()))
            {
                return false;
            }
        }
        if (this.getPid() != null && that.getPid() != null)
        {
            if (! this.getPid().equals(that.getPid()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int gidValue = this.getGid() == null ? 0 : this.getGid().hashCode();
            result = result * 37 + gidValue;
            int pidValue = this.getPid() == null ? 0 : this.getPid().hashCode();
            result = result * 37 + pidValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
