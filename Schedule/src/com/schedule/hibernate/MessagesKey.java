/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Jun 23 22:00:06 CEST 2005 by MyEclipse Hibernate Tool.
 */
package com.schedule.hibernate;

import java.io.Serializable;

/**
 * A class representing a composite primary key id for the Messages
 * table.  This object should only be instantiated for use with instances 
 * of the Messages class.
 */
public class MessagesKey
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private volatile int hashValue = 0;

    /** The value of the MID component of this composite id. */
    private java.lang.Integer mid;

    /** The value of the UID component of this composite id. */
    private java.lang.Integer uid;

    /**
     * Simple constructor of MessagesKey instances.
     */
    public MessagesKey()
    {
    }

    /**
     * Returns the value of the mid property.
     * @return java.lang.Integer
     */
    public java.lang.Integer getMid()
    {
        return mid;
    }

    /**
     * Sets the value of the mid property.
     * @param mid
     */
    public void setMid(java.lang.Integer mid)
    {
        hashValue = 0;
        this.mid = mid;
    }

    /**
     * Returns the value of the uid property.
     * @return java.lang.Integer
     */
    public java.lang.Integer getUid()
    {
        return uid;
    }

    /**
     * Sets the value of the uid property.
     * @param uid
     */
    public void setUid(java.lang.Integer uid)
    {
        hashValue = 0;
        this.uid = uid;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the id components.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof MessagesKey))
            return false;
        MessagesKey that = (MessagesKey) rhs;
        if (this.getMid() != null && that.getMid() != null)
        {
            if (! this.getMid().equals(that.getMid()))
            {
                return false;
            }
        }
        if (this.getUid() != null && that.getUid() != null)
        {
            if (! this.getUid().equals(that.getUid()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int midValue = this.getMid() == null ? 0 : this.getMid().hashCode();
            result = result * 37 + midValue;
            int uidValue = this.getUid() == null ? 0 : this.getUid().hashCode();
            result = result * 37 + uidValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
